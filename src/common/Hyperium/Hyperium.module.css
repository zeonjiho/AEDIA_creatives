/* =========================================================
   Masonry Layout
========================================================= */

.masonry {
    display: flex;
    width: 100%;
    margin-top: 0;
    min-height: 200px;
    /* 최소 높이 설정 */
}

.masonry_column {
    padding: 0.1rem;
    background-clip: padding-box;
    flex: 1;
    min-width: calc(25% - 0.2rem);
    /* 4칸 고정 */
    max-width: calc(25% - 0.2rem);
    /* 4칸 고정 */
}


/* =========================================================
     Card Styles
  ========================================================= */

.card {
    margin-bottom: 0.2rem;
    opacity: 1;
    cursor: pointer;
    position: relative;
    border-radius: 0;
    /* 기본은 사각형 */
    overflow: hidden;
    /* 자식이 둥글게 잘리도록 */
    background: rgb(0, 0, 0);
    user-select: none;
    filter: brightness(100%);
    transform: translate3d(0, 0, 0) scale(1);
    box-shadow: 0 0 0 rgba(0, 0, 0, 0);
    transition: all 0.5s var(--timing-function);
    /* border-radius도 애니메이션 */
    will-change: transform, opacity, box-shadow, filter;
    -webkit-transform: translateZ(0);
    backface-visibility: hidden;
    -webkit-backface-visibility: hidden;
    perspective: 1000;
    -webkit-perspective: 1000;
    -webkit-font-smoothing: antialiased;
    -webkit-user-drag: element;
    /* 카드 전체 드래그 가능 */
    animation: fadeIn 0.5s ease;
    opacity: 0;
    animation-fill-mode: forwards;
}

.card.loaded {
    opacity: 1;
}


/* 카드 Hover 시 이미지 살짝 확대 */

.card:hover .imageContainer img {
    transform: scale(1.015);
}


/* 카드 Hover 시 배경색 변경 */

.card:hover {
    background-color: rgb(25, 25, 25);
}


/* 카드 Hover & Dimmed 시 스타일 */

.card.cardHovered {
    opacity: 1;
    filter: brightness(100%);
    transition: all 0.5s var(--timing-function);
    z-index: 1;
}

.card.cardDimmed {
    opacity: 0.5;
    filter: brightness(80%);
    transition: all 1s var(--timing-function);
}

.card:not(.cardHovered):not(.cardDimmed) {
    opacity: 1;
    filter: brightness(100%);
    transition: all 0.5s var(--timing-function);
}


/* 드래그 상태 표현 */

.card.grabbing {
    cursor: grab !important;
    transform: scale(1.0);
    box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2);
}


/* 드래그 중일 때 둥글게 */

.card.dragging {
    cursor: grabbing !important;
    transform: scale(1.02);
    border-radius: 1rem;
    /* 부드럽게 둥글어짐 */
    pointer-events: none;
    box-shadow: 0 12px 24px rgba(0, 0, 0, 0.3);
}

.card.dragging * {
    pointer-events: none;
}

.card.returnTransition {
    transition: all 0.3s var(--timing-function) !important;
}


/* 빈 카드 Placeholder */

.emptyCard {
    margin-bottom: 0.2rem;
    opacity: 0;
    height: 0;
    padding: 0;
    visibility: hidden;
}


/* =========================================================
     Image Container
  ========================================================= */

.imageContainer {
    position: relative;
    width: 100%;
    overflow: hidden;
    will-change: transform;
}

/* 이미지가 없을 때 컨테이너 숨기기 */
.imageContainer:empty {
    display: none;
}

.imageContainer img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    display: block;
    transform: scale(1);
    transition: transform 0.5s var(--timing-function);
    will-change: transform;
    backface-visibility: hidden;
    -webkit-backface-visibility: hidden;
    -webkit-font-smoothing: subpixel-antialiased;
    -webkit-user-drag: element;
    /* 이미지 드래그 가능 */
    max-height: 786px;
}


/* 링크 프리뷰 */

.linkPreview {
    position: relative;
    width: 100%;
    min-height: 200px;
    max-height: 400px;
    background: #2a2a2a;
    display: flex;
    align-items: center;
    justify-content: center;
    /* border-radius: 4px; */
    overflow: hidden;
}

.linkPreview img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    min-height: 200px;
}


/* 링크 프리뷰도 같은 Hover 효과 적용 */

.card:hover .linkPreview img {
    transform: scale(1.015);
}


/* =========================================================
     Overlay
  ========================================================= */

.overlay {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: linear-gradient(to bottom, transparent 50%, rgba(0, 0, 0, 0.8));
    display: flex;
    flex-direction: column;
    justify-content: flex-start;
    padding: 1rem;
    opacity: 0;
    transition: opacity 0.3s var(--timing-function);
}

.imageContainer:hover .overlay {
    opacity: 1;
}


/* 오버레이에 표시될 버튼들 */

.overlayButtons {
    position: absolute;
    bottom: 10px;
    right: 10px;
    display: flex;
    gap: 8px;
    opacity: 0;
    transition: opacity 0.3s var(--timing-function);
    z-index: 10;
    height: 36px;
}

.card:hover .overlayButtons {
    opacity: 1;
}

.overlayButton {
    opacity: 0.5;
    /* background: rgba(0, 0, 0, 0.4); */
    background: none;
    border: none;
    border-radius: 6px;
    width: 36px;
    height: 36px;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    transition: all 0.2s var(--timing-function);
    color: rgba(255, 255, 255, 0.7);
    /* backdrop-filter: blur(4px); */
}

.overlayButton:hover {
    opacity: 1;
    color: rgba(255, 255, 255, 1);
}

.overlayButton.saved {
    color: #4CAF50;
    /* 저장된 상태 시 초록색 */
}

.overlayButton.saved:hover {
    color: #66BB6A;
}


/* =========================================================
     Tag / Stats
  ========================================================= */

.tags {
    display: flex;
    gap: 0.5rem;
    flex-wrap: wrap;
}

.tag {
    background: rgba(0, 0, 0, 0.5);
    padding: 0.5rem 1rem;
    border-radius: 1rem;
    font-size: 0.75rem;
    color: white;
    /* backdrop-filter: blur(4px); */
    /* -webkit-backdrop-filter: blur(4px); */
    /* border: 1px solid rgba(0, 0, 0, 0.5); */
    font-weight: 500;
    transition: all 0.3s var(--timing-function);
}

.tag:hover {
    background: rgba(0, 0, 0, 0.4);
    font-weight: 640;
}

.stats {
    display: flex;
    justify-content: space-between;
    align-items: center;
}

.statsLeft,
.statsRight {
    display: flex;
    gap: 1rem;
    align-items: center;
}

.statItem {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    color: white;
    font-size: 0.875rem;
}

.statIcon {
    font-size: 1rem;
    /* SVG는 currentColor를 상속받아 부모 요소의 색상을 따라감 */
}


/* =========================================================
     Title / Meta
  ========================================================= */

.titleContainer {
    padding: 1rem;
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
}

.titleRow {
    display: flex;
    justify-content: space-between;
    align-items: center;
    gap: 1rem;
}

.titleInfo {
    flex: 1;
}

.titleWrapper {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    min-height: 0;  /* 높이를 내용물에 맞춤 */
}

.title:empty {
    display: none;  /* 내용이 없으면 숨김 */
}

.title:not(:empty) {
    margin: 0;
    font-size: 1rem;
    font-weight: 700;
    padding: 0.25rem;
    border-radius: 4px;
    color: white;
    border-radius: 4px;
    transition: all 0.3s var(--timing-function);
    width: fit-content;
}

.title:hover {
    background: rgba(255, 255, 255, 0.1);
}

.authorInfo {
    display: inline-flex;
    align-items: center;
    gap: 0.5rem;
    padding: 0.1rem 0.5rem;
    border-radius: 4px;
    transition: all 0.3s var(--timing-function);
    width: fit-content;
    font-weight: 400;
}

.authorInfo:hover {
    background: rgba(255, 255, 255, 0.1);
    font-weight: 500;
}

.authorAvatar {
    width: 24px;
    height: 24px;
    border-radius: 50%;
    object-fit: cover;
    background-color: #2C2C2C; /* 기본 배경색 추가 */
}

/* 이미지 로딩 중일 때의 스타일 */
.authorAvatar[src=""] {
    background-image: url('../../Assets/default-profile.svg');
    background-size: cover;
    background-position: center;
}

.authorName {
    font-size: 0.875rem;
    color: rgba(255, 255, 255, 0.8);
    white-space: nowrap;
}

.cardStats {
    display: flex;
    gap: 1rem;
    align-items: center;
    padding-top: 0.5rem;
    border-top: 1px solid rgba(255, 255, 255, 0.1);
    margin-top: 0.5rem;
}

.cardMeta {
    padding-top: 0.5rem;
    /* border-top: 1px solid rgba(255, 255, 255, 0.1); */
    margin-top: 0.5rem;
}

.metaContent {
    display: flex;
    align-items: center;
    justify-content: space-between;
}

.itemType {
    font-size: 0.75rem;
    color: rgba(255, 255, 255, 0.5);
    text-transform: uppercase;
    letter-spacing: 0.05em;
    background: rgba(255, 255, 255, 0.1);
    padding: 0.25rem 0.5rem;
    border-radius: 4px;
    transition: background-color 0.3s var(--timing-function);
}

.itemType:hover {
    background: rgba(255, 255, 255, 0.15);
}


/* =========================================================
     Like Button Animation
  ========================================================= */

.likeButton {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    color: rgba(255, 255, 255, 0.7);
    font-size: 0.9rem;
    background: none;
    border: none;
    padding: 0.45rem 0.65rem;
    cursor: pointer;
    border-radius: 4px;
    transition: all 0.2s var(--timing-function);
    font-family: var(--font-mono);
}

.likeButton:hover {
    background: rgba(255, 255, 255, 0.1);
}

.likeButton.liked {
    color: #ff4b4b;
}

.likeIcon {
    width: 1.15rem;
    height: 1.15rem;
    transform-origin: center;
}

.likeButton.liked svg {
    animation: likeAnimation 0.3s ease-in-out;
}

.likeButton:not(.liked) svg {
    animation: unlikeAnimation 0.3s ease-in-out;
}

.likeButton svg path {
    stroke: rgba(255, 255, 255, 0.7);
    stroke-width: 1.5;
    fill: transparent;
    transition: all 0.2s ease;
}

.likeButton.liked svg path {
    fill: #ff4b4b;
    stroke: #ff4b4b;
}

.likeButton:hover svg path {
    stroke: rgba(255, 255, 255, 1);
}

.likeButton.liked:hover svg path {
    fill: #ff6b6b;
    stroke: #ff6b6b;
}


/* 좋아요 애니메이션 */

@keyframes unlikeAnimation {
    0% {
        transform: scale(1);
    }
    50% {
        transform: scale(1.2);
    }
    100% {
        transform: scale(1);
    }
}

@keyframes likeAnimation {
    0% {
        transform: scale(1);
    }
    50% {
        transform: scale(0.8);
    }
    100% {
        transform: scale(1);
    }
}


/* 아이콘 호버 Tooltip */

.typeIcon {
    font-size: 0.9rem;
    color: rgba(255, 255, 255, 0.6);
    transition: all 0.3s var(--timing-function);
    opacity: 0;
    cursor: pointer;
}

.card:hover .typeIcon {
    opacity: 1;
    color: rgba(255, 255, 255, 0.6);
}

.iconWrapper {
    display: flex;
    align-items: center;
}

.tooltip {
    position: fixed;
    background: rgba(0, 0, 0, 0.9);
    color: white;
    padding: 6px 10px;
    border-radius: 4px;
    font-size: 0.75rem;
    white-space: nowrap;
    pointer-events: none;
    z-index: 99999;
    backdrop-filter: blur(8px);
    box-shadow: 0 2px 6px rgba(0, 0, 0, 0.2);
    font-weight: 500;
    letter-spacing: 0.02em;
    opacity: 1;
}


/* =========================================================
     Code Preview
  ========================================================= */

.codePreview {
    width: 100%;
    background: #070707;
    color: #d4d4d4;
    /* border-radius: 8px; */
    overflow: hidden;
    font-family: 'Fira Code', monospace;
}

.codeHeader {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 0.75rem 1rem;
    background: rgba(255, 255, 255, 0.02);
    border-bottom: 1px solid rgba(255, 255, 255, 0.1);
}


.language {
    font-size: 0.8rem;
    color: #888;
    text-transform: uppercase;
    letter-spacing: 0.05em;
    font-weight: 500;
}

.lineCount {
    font-size: 0.8rem;
    color: #888;
}

.code {
    margin: 0;
    padding: 1rem 0;
    font-size: 0.875rem;
    line-height: 1.5;
    overflow: hidden;
    transform: scale(1);
    transition: all 0.5s var(--timing-function);
    will-change: transform;
    opacity: 0.6;
}

.codeLine {
    display: flex;
    padding: 0 1rem;
    width: 100%;
}

.codeLine:hover {
    background: rgba(255, 255, 255, 0.05);
}

.lineNumber {
    color: #888;
    text-align: right;
    padding-right: 1rem;
    min-width: 2rem;
    user-select: none;
    font-family: var(--font-mono);
}

.codeContent {
    flex: 1;
    white-space: pre-wrap;
    word-break: break-all;
    overflow-wrap: break-word;
    font-family: var(--font-mono);
}

/* 코드 프리뷰 호버 시 확대 효과와 투명도 변경 */
.card:hover .code {
    transform: scale(1.015);
    opacity: 1;
}

/* 코드 프리뷰 마지막 줄 아래 여백 */
.code:after {
    content: '';
    display: block;
    height: 1rem;
}


/* =========================================================
     Description
  ========================================================= */

.description {
    font-size: 0.875rem;
    color: rgba(255, 255, 255, 0.7);
    line-height: 1.5;
    /* margin: 0.5rem 0; */
    padding: 0.25rem;
    border-radius: 4px;
    transition: background-color 0.3s var(--timing-function);
    display: -webkit-box;
    -webkit-line-clamp: 2;
    /* 2줄 말줄임 */
    -webkit-box-orient: vertical;
    overflow: hidden;
    text-overflow: ellipsis;
    max-height: calc(1.5em * 2);
    /* line-height * 2줄 */
    word-break: break-word;
}

.description:hover {
    background: rgba(255, 255, 255, 0.1);
}


/* =========================================================
     Meta Buttons
  ========================================================= */

.metaButtons {
    display: flex;
    gap: 8px;
    align-items: center;
}

.metaButton {
    background: none;
    border: none;
    padding: 8px;
    cursor: pointer;
    color: rgba(255, 255, 255, 0.7);
    transition: all 0.2s var(--timing-function);
    border-radius: 4px;
}

.metaButton:hover {
    color: rgba(255, 255, 255, 0.9);
    background: rgba(255, 255, 255, 0.1);
}


/* =========================================================
     Modal
  ========================================================= */

.modalContainer {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: rgba(0, 0, 0, 0.95);
    z-index: 1000;
}

.modalHeader {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    height: 4rem;
    background: rgba(0, 0, 0, 0.8);
    backdrop-filter: blur(8px);
    display: flex;
    align-items: center;
    justify-content: space-between;
    padding: 0 2rem;
    z-index: 1001;
    /* 모달보다 위에 표시 */
}

.modalTitle {
    color: white;
    font-size: 1.25rem;
    font-weight: 500;
}

.closeButton {
    width: 2.5rem;
    height: 2.5rem;
    background: none;
    border: none;
    color: white;
    font-size: 1.5rem;
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: all 0.3s var(--timing-function);
}

.closeButton:hover {
    color: rgba(255, 255, 255, 0.7);
    transform: scale(1.1);
}

@media screen and (max-width: 768px) {
    .modalHeader {
        height: 3rem;
        padding: 0 1rem;
    }
    .modalTitle {
        font-size: 1.1rem;
    }
    .closeButton {
        width: 2rem;
        height: 2rem;
        font-size: 1.25rem;
    }
}


/* =========================================================
     Timer / Border Progress
  ========================================================= */

@keyframes heartPop {
    0% {
        transform: scale(1);
        opacity: 1;
    }
    100% {
        transform: scale(2);
        opacity: 0;
    }
}

.timerBorder::before {
    content: '';
    position: absolute;
    inset: 0;
    border: 2px solid rgba(255, 255, 255, 0.3);
    pointer-events: none;
    animation: borderProgress 0.5s linear forwards;
    z-index: 1;
}

@keyframes borderProgress {
    0% {
        clip-path: inset(0 100% 0 0);
    }
    100% {
        clip-path: inset(0 0 0 0);
    }
}

.dragTimer {
    position: fixed;
    width: 20px;
    height: 20px;
    border: 2px solid #fff;
    border-radius: 50%;
    pointer-events: none;
    z-index: 10000;
    animation: timerAnimation 0.5s linear;
}

@keyframes timerAnimation {
    0% {
        clip-path: circle(50% at 50% 50%);
    }
    100% {
        clip-path: circle(0% at 50% 50%);
    }
}


/* =========================================================
     Collection Tooltip
  ========================================================= */

.collectionTooltip {
    position: fixed;
    background: rgba(0, 0, 0, 0.9);
    color: white;
    padding: 12px 20px;
    border-radius: 8px;
    font-size: 0.9rem;
    white-space: nowrap;
    pointer-events: none;
    z-index: 99999;
    backdrop-filter: blur(8px);
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);
    font-weight: 500;
    letter-spacing: 0.02em;
    animation: tooltipFade 2s ease-in-out;
}

@keyframes tooltipFade {
    0% {
        opacity: 0;
        transform: translate(-50%, -40%);
    }
    20% {
        opacity: 1;
        transform: translate(-50%, -50%);
    }
    80% {
        opacity: 1;
        transform: translate(-50%, -50%);
    }
    100% {
        opacity: 0;
        transform: translate(-50%, -60%);
    }
}


/* =========================================================
     Responsive (max-width: 1024px)
  ========================================================= */

@media screen and (max-width: 1024px) {
    .masonry_column {
        min-width: calc(33.333% - 0.2rem);
        /* 3칸으로 변경 */
        max-width: calc(33.333% - 0.2rem);
    }
}


/* =========================================================
     Responsive (max-width: 768px)
  ========================================================= */

@media screen and (max-width: 768px) {
    .masonry_column {
        min-width: calc(50% - 0.2rem);
        max-width: calc(50% - 0.2rem);
    }
    .overlay {
        padding: 0.75rem;
    }
    .tag {
        padding: 0.2rem 0.5rem;
        font-size: 0.7rem;
    }
    .statItem,
    .likeButton {
        font-size: 0.8rem;
    }
    .title {
        font-size: 0.9rem;
    }
    .authorName {
        font-size: 0.8rem;
    }
    .titleContainer {
        padding: 0.5rem;
        gap: 0.25rem;
    }
    .cardStats {
        padding-top: 0.25rem;
        margin-top: 0.25rem;
        gap: 0.5rem;
    }
    .description {
        margin: 0.25rem 0;
        padding: 0.1rem;
    }
    .itemType {
        font-size: 0.7rem;
    }
    /* 모바일에서 hover overlay 제거 & 집중 모드 효과 비활성화 */
    .card:hover .overlay {
        opacity: 0;
    }
    .card.cardHovered .overlay {
        opacity: 1;
    }
    .overlayButtons {
        opacity: 0;
    }
    .card.cardHovered .overlayButtons {
        opacity: 1;
    }
    .card.cardHovered,
    .card.cardDimmed {
        opacity: 1 !important;
        filter: brightness(100%) !important;
        transition: none;
    }
    .likeButton {
        padding: 0.25rem 0.5rem;
        gap: 0.25rem;
    }
    .likeIcon {
        width: 1.15rem;
        height: 1.15rem;
    }
    .likeButton:hover {
        background: none;
    }
    .metaContent {
        gap: 0.25rem;
    }
    
    /* 모바일 액션 버튼 표시 */
    .mobileActions {
        display: flex !important;
        align-items: center;
    }
    
    /* 모바일에서는 원래 오버레이 버튼과 소스 정보 완전히 숨김 */
    .overlay .overlayButtons,
    .sourceInfo {
        display: none !important;
    }
    
    /* 모바일에서는 설정 버튼 항상 표시 */
    .settingsButton {
        opacity: 1;
    }
}


/* =========================================================
     Responsive (max-width: 500px)
  ========================================================= */

@media screen and (max-width: 500px) {
    .masonry_column {
        min-width: calc(50% - 0.2rem);
        max-width: calc(50% - 0.2rem);
    }
    .masonry {
        padding: 0 0.2rem;
    }
}


/* =========================================================
     Source Info
  ========================================================= */

.sourceInfo {
    position: absolute;
    left: 10px;
    bottom: 10px;
    display: flex;
    align-items: center;
    gap: 6px;
    /* background: rgba(0, 0, 0, 0.4); */
    padding: 6px 10px;
    border-radius: 6px;
    /* backdrop-filter: blur(4px); */
    opacity: 0;
    transition: opacity 0.3s var(--timing-function);
    z-index: 10;
    height: 36px;
    box-sizing: border-box;
}

.imageContainer:hover .sourceInfo {
    opacity: 1;
}

.sourceFavicon {
    width: 16px;
    height: 16px;
    min-width: 16px;
    min-height: 16px;
    max-width: 16px;
    max-height: 16px;
    display: flex;
    align-items: center;
    justify-content: center;
    opacity: 0.5;
    transition: all 0.3s var(--timing-function);
}

.sourceFavicon svg {
    width: 100%;
    height: 100%;
}

.sourceDomain {
    color: rgba(255, 255, 255, 0.5);
    font-size: 0.8rem;
    font-weight: 500;
    white-space: nowrap;
    transition: all 0.3s var(--timing-function);
    text-decoration: none;
    cursor: pointer;
}


/* 1024px 이하에서 sourceDomain 숨기기 */

@media screen and (max-width: 1024px) {
    .sourceDomain {
        display: none;
    }
}

.sourceInfo:hover .sourceFavicon {
    opacity: 1;
}

.sourceInfo:hover .sourceDomain {
    color: rgba(255, 255, 255, 0.9);
    font-weight: 600;
}

/* =========================================================
     Settings Menu
  ========================================================= */

.settingsWrapper {
    position: relative;
    z-index: 100;
    display: flex;
    align-items: center;
    height: 100%;
}

.settingsButton {
    background: none;
    border: none;
    padding: 8px;
    color: rgba(255, 255, 255, 0.6);
    cursor: pointer;
    border-radius: 50%;
    transition: opacity 0.2s ease;
    display: flex;
    align-items: center;
    justify-content: center;
    width: 32px;
    height: 32px;
    opacity: 0;
    margin: auto 0;
}

.card:hover .settingsButton {
    opacity: 1;
}

.settingsButton:hover {
    background: rgba(255, 255, 255, 0.1);
    color: rgba(255, 255, 255, 0.9);
}

/* =========================================================
     모바일 액션 버튼
  ========================================================= */

.mobileActions {
    display: none; /* 기본적으로 숨김 */
}

.mobileActionMenu {
    position: absolute;
    top: 40px;
    right: 10px;
    background: rgba(20, 20, 20, 0.95);
    border-radius: 8px;
    padding: 8px;
    z-index: 1000;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.3);
    display: flex;
    flex-direction: column;
    gap: 8px;
    min-width: 180px;
    backdrop-filter: blur(10px);
    animation: fadeIn 0.2s ease;
    border: 1px solid rgba(255, 255, 255, 0.1);
}

@keyframes fadeIn {
    from { opacity: 0; transform: translateY(-10px); }
    to { opacity: 1; transform: translateY(0); }
}

.mobileMenuItem {
    display: flex;
    align-items: center;
    gap: 12px;
    padding: 8px 12px;
    border-radius: 6px;
    cursor: pointer;
    transition: all 0.2s var(--timing-function);
    color: rgba(255, 255, 255, 0.8);
    font-size: 0.9rem;
}

.mobileMenuItem:hover {
    background: rgba(255, 255, 255, 0.1);
    color: rgba(255, 255, 255, 1);
}

.mobileMenuIcon {
    width: 16px;
    height: 16px;
    display: flex;
    align-items: center;
    justify-content: center;
}

/* 모바일 환경에서 버튼 스타일 개선 */
@media screen and (max-width: 768px) {
    /* ... existing code ... */
    
    /* 모바일에서는 원래 오버레이 버튼과 소스 정보 완전히 숨김 */
    .overlay .overlayButtons,
    .sourceInfo {
        display: none !important;
    }
    
    /* 모바일에서는 설정 버튼 항상 표시 */
    .settingsButton {
        opacity: 1;
    }
}

/* 컨테이너 스타일 추가 */
.hyperiumContainer {
    width: 100%;
    position: relative;
    overflow: hidden;
}

/* =========================================================
     Source Link Container
  ========================================================= */

.sourceLinkContainer {
  display: none; /* Hide by default on desktop */
  align-items: center;
  margin-bottom: 0.5rem;
  width: 100%;
}

.sourceLinkButton {
  display: flex;
  align-items: center;
  gap: 8px;
  padding: 6px 10px;
  border-radius: 6px;
  background: rgba(255, 255, 255, 0.06);
  color: rgba(255, 255, 255, 0.8);
  text-decoration: none;
  transition: all 0.2s var(--timing-function);
  font-size: 0.85rem;
  max-width: 100%;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

.sourceLinkButton:hover, .sourceLinkButton:active {
  background: rgba(255, 255, 255, 0.12);
  color: rgba(255, 255, 255, 1);
}

.sourceLinkIcon {
  width: 16px;
  height: 16px;
  min-width: 16px;
  min-height: 16px;
  display: flex;
  align-items: center;
  justify-content: center;
}

.sourceLinkText {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  font-weight: 500;
}

/* Show source link container only on mobile */
@media screen and (max-width: 768px) {
  .sourceLinkContainer {
    display: flex;
  }
}

/* Media query adjustments for smaller screens */
@media screen and (max-width: 500px) {
  .sourceLinkText {
    font-size: 0.8rem;
  }
  
  .sourceLinkButton {
    padding: 4px 8px;
  }
  
  .sourceLinkIcon {
    width: 14px;
    height: 14px;
    min-width: 14px;
    min-height: 14px;
  }
}

/* Action Button Styles */
.actionButtonsWrapper {
  display: flex;
  align-items: center;
  gap: 8px;
}

.actionButton {
  background: none;
  border: none;
  padding: 8px;
  color: rgba(255, 255, 255, 0.6);
  cursor: pointer;
  border-radius: 50%;
  transition: opacity 0.2s ease;
  display: flex;
  align-items: center;
  justify-content: center;
  width: 32px;
  height: 32px;
  opacity: 0;
}

.card:hover .actionButton {
  opacity: 1;
}

.actionButton:hover {
  background: rgba(255, 255, 255, 0.1);
  color: rgba(255, 255, 255, 0.9);
}

/* Adjust the settings wrapper to accommodate both buttons */
.settingsWrapper {
  position: relative;
  z-index: 100;
  display: flex;
  align-items: center;
  height: 100%;
}

/* Mobile adjustments */
@media screen and (max-width: 768px) {
  .actionButton {
    opacity: 1;
  }
  
  /* Hide settings button on mobile */
  .settingsButton {
    display: none;
  }
}

/* Desktop adjustments */
@media screen and (min-width: 769px) {
  /* Hide action button on desktop */
  .actionButton {
    display: none;
  }
}