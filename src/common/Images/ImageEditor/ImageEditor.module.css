.editor {
  position: fixed;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  width: 90%;
  max-width: 900px;
  height: 80vh;
  background-color: #000000;
  border-radius: 12px;
  z-index: 3000;
  display: flex;
  flex-direction: column;
  overflow: hidden;
}

.backdrop {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(0, 0, 0, 0.7);
  z-index: 2999;
  /* backdrop-filter: blur(5px); */
}

.topBar {
  height: 4rem;
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding: 0 16px;
  background-color: rgba(0, 0, 0, 0.8);
  backdrop-filter: blur(10px);
}

.topBarActions {
  display: flex;
  align-items: center;
  gap: 16px;
}

.steps {
  display: flex;
  gap: 24px;
  align-items: center;
}

.step {
  background: none;
  border: none;
  color: rgba(255, 255, 255, 0.6);
  font-size: 14px;
  font-weight: 500;
  cursor: pointer;
  padding: 8px 0;
  position: relative;
  transition: all 0.2s;
}

.step::after {
  content: '';
  position: absolute;
  bottom: 0;
  left: 0;
  width: 100%;
  height: 2px;
  background-color: var(--color-primary);
  transform: scaleX(0);
  transition: transform 0.2s;
}

.step:hover {
  color: rgba(255, 255, 255, 0.8);
}

.step.active {
  color: var(--color-primary);
}

.step.active::after {
  transform: scaleX(1);
}

.closeButton, .saveButton, .uploadNewButton {
  padding: 8px 16px;
  border: none;
  background: none;
  font-size: 14px;
  font-weight: 500;
  cursor: pointer;
  border-radius: 6px;
  transition: opacity 0.2s;
}

.closeButton {
  color: #fff;
}

.saveButton, .uploadNewButton {
  color: var(--color-primary);
}

.closeButton:hover, .saveButton:hover, .uploadNewButton:hover {
  opacity: 0.8;
}

.content {
  flex: 1;
  position: relative;
  background-color: #000;
}

.cropContainer {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
}

.controls {
  padding: 16px;
  background-color: rgba(0, 0, 0, 0.8);
  backdrop-filter: blur(10px);
  display: flex;
  flex-direction: column;
  gap: 16px;
}

.editControls {
  display: flex;
  flex-direction: column;
  gap: 16px;
}

.adjustControls {
  padding: 24px;
  background-color: rgba(20, 20, 20, 0.95);
  border-radius: 16px;
  backdrop-filter: blur(20px);
}

.adjustButtons {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(80px, 1fr));
  gap: 16px;
  padding-bottom: 24px;
}

.adjustButton {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 12px;
  padding: 16px 12px;
  background: rgba(255, 255, 255, 0.03);
  border: 1px solid rgba(255, 255, 255, 0.1);
  border-radius: 12px;
  color: rgba(255, 255, 255, 0.6);
  cursor: pointer;
  transition: all 0.2s;
  min-height: 100px;
}

.adjustButton svg {
  width: 24px;
  height: 24px;
  opacity: 0.6;
  transition: all 0.2s;
}

.adjustButton span {
  font-size: 13px;
  font-weight: 500;
}

.adjustButton:hover {
  background: rgba(255, 255, 255, 0.06);
  border-color: rgba(255, 255, 255, 0.2);
}

.adjustButton:hover svg {
  opacity: 0.8;
}

.adjustButton.active {
  background: rgba(var(--color-primary-rgb), 0.1);
  border-color: var(--color-primary);
  color: var(--color-primary);
}

.adjustButton.active svg {
  color: var(--color-primary);
  opacity: 1;
}

.activeSlider {
  margin-top: 24px;
  padding-top: 24px;
  border-top: 1px solid rgba(255, 255, 255, 0.1);
}

.sliderHeader {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 16px;
}

.sliderLabel {
  display: flex;
  align-items: center;
  gap: 8px;
  color: #fff;
  font-size: 14px;
  font-weight: 500;
}

.sliderLabel svg {
  width: 16px;
  height: 16px;
  opacity: 0.8;
}

.sliderValue {
  color: var(--color-primary);
  font-size: 14px;
  font-weight: 600;
  min-width: 60px;
  text-align: right;
}

.sliderContainer {
  position: relative;
  height: 36px;
  display: flex;
  align-items: center;
}

.slider {
  -webkit-appearance: none;
  width: 100%;
  height: 2px;
  background: rgba(255, 255, 255, 0.12);
  border-radius: 1px;
  outline: none;
  position: relative;
}

.slider::-webkit-slider-thumb {
  -webkit-appearance: none;
  width: 18px;
  height: 18px;
  border: 2px solid var(--color-primary);
  border-radius: 50%;
  background: transparent;
  cursor: pointer;
  position: relative;
  z-index: 1;
  box-shadow: 0 0 0 4px rgba(var(--color-primary-rgb), 0.1),
              0 2px 4px rgba(0, 0, 0, 0.2);
  transition: all 0.2s ease;
}

.slider::-webkit-slider-thumb:hover {
  transform: scale(1.1);
  box-shadow: 0 0 0 6px rgba(var(--color-primary-rgb), 0.15),
              0 2px 4px rgba(0, 0, 0, 0.2);
}

.slider::-webkit-slider-thumb:active {
  transform: scale(0.95);
}

.slider::-webkit-slider-runnable-track {
  width: 100%;
  height: 2px;
  background: linear-gradient(
    to right,
    var(--color-primary) var(--value-percent, 0%),
    rgba(255, 255, 255, 0.12) var(--value-percent, 0%)
  );
  border-radius: 1px;
}

.zoomControl {
  display: flex;
  align-items: center;
  gap: 12px;
}

.zoomIcon {
  width: 16px;
  height: 16px;
  fill: #fff;
}

.rotateButton {
  padding: 8px;
  background: none;
  border: none;
  color: #fff;
  cursor: pointer;
  opacity: 0.8;
  transition: opacity 0.2s;
}

.rotateButton:hover {
  opacity: 1;
}

.ratioControls {
  display: flex;
  gap: 8px;
  overflow-x: auto;
  padding-bottom: 4px;
  scrollbar-width: none;
  -ms-overflow-style: none;
}

.ratioControls::-webkit-scrollbar {
  display: none;
}

.ratioButton {
  padding: 8px 16px;
  background-color: rgba(60, 60, 60, 0.8);
  border: none;
  border-radius: 6px;
  color: #fff;
  font-size: 13px;
  font-weight: 500;
  cursor: pointer;
  white-space: nowrap;
  transition: all 0.2s;
}

.ratioButton:hover {
  background-color: rgba(70, 70, 70, 0.8);
}

.ratioButton.active {
  background-color: var(--color-primary);
}

.rotationControl {
  display: flex;
  align-items: center;
  gap: 16px;
}

.rotationValue {
  color: #fff;
  font-size: 14px;
  min-width: 40px;
}

.rotationSlider {
  position: relative;
  flex: 1;
  height: 30px;
}

.rotationInput {
  -webkit-appearance: none;
  width: 100%;
  height: 2px;
  background: transparent;
  position: relative;
  z-index: 2;
}

.rotationInput::-webkit-slider-thumb {
  -webkit-appearance: none;
  width: 18px;
  height: 18px;
  border: 2px solid var(--color-primary);
  border-radius: 50%;
  background: transparent;
  cursor: pointer;
  box-shadow: 0 0 0 4px rgba(var(--color-primary-rgb), 0.1),
              0 2px 4px rgba(0, 0, 0, 0.2);
  transition: all 0.2s ease;
}

.rotationInput::-webkit-slider-thumb:hover {
  transform: scale(1.1);
  box-shadow: 0 0 0 6px rgba(var(--color-primary-rgb), 0.15),
              0 2px 4px rgba(0, 0, 0, 0.2);
}

.rotationInput::-webkit-slider-thumb:active {
  transform: scale(0.95);
}

.rotationTicks {
  position: absolute;
  top: 50%;
  left: 0;
  right: 0;
  height: 2px;
  background: #444;
  display: flex;
  justify-content: space-between;
  align-items: center;
}

.rotationTick {
  width: 1px;
  height: 4px;
  background-color: #666;
  transform: translateY(-50%);
}

.majorTick {
  height: 8px;
  background-color: #888;
}

.centerTick {
  height: 12px;
  width: 2px;
  background-color: var(--color-primary);
}

.resetButton {
  padding: 8px;
  background: none;
  border: none;
  color: #fff;
  cursor: pointer;
  opacity: 0.8;
  transition: opacity 0.2s;
}

.resetButton:hover {
  opacity: 1;
}

input[type="range"] {
  -webkit-appearance: none;
  width: 100%;
  height: 2px;
  background: rgba(255, 255, 255, 0.12);
  border-radius: 1px;
  outline: none;
}

input[type="range"]::-webkit-slider-thumb {
  -webkit-appearance: none;
  width: 18px;
  height: 18px;
  border: 2px solid var(--color-primary);
  border-radius: 50%;
  background: transparent;
  cursor: pointer;
  box-shadow: 0 0 0 4px rgba(var(--color-primary-rgb), 0.1),
              0 2px 4px rgba(0, 0, 0, 0.2);
  transition: all 0.2s ease;
}

input[type="range"]::-webkit-slider-thumb:hover {
  transform: scale(1.1);
  box-shadow: 0 0 0 6px rgba(var(--color-primary-rgb), 0.15),
              0 2px 4px rgba(0, 0, 0, 0.2);
}

input[type="range"]::-webkit-slider-thumb:active {
  transform: scale(0.95);
}

.uploadButton {
  display: none;
}

.customRatioInputs {
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 8px;
  background-color: rgba(40, 40, 40, 0.8);
  border-radius: 8px;
  margin-top: 8px;
}

.ratioInput {
  display: flex;
  align-items: center;
  gap: 8px;
}

.ratioInput input {
  width: 60px;
  padding: 6px;
  background-color: rgba(60, 60, 60, 0.8);
  border: 1px solid #555;
  border-radius: 4px;
  color: #fff;
  font-size: 14px;
  text-align: center;
}

.ratioInput span {
  color: #fff;
  font-weight: 500;
}

.filterControls {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(100px, 1fr));
  gap: 16px;
  padding: 16px;
}

.filterButton {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 8px;
  background: none;
  border: none;
  cursor: pointer;
  padding: 8px;
  border-radius: 8px;
  transition: all 0.2s;
}

.filterButton:hover {
  background-color: rgba(255, 255, 255, 0.1);
}

.filterButton.active {
  background-color: rgba(var(--color-primary-rgb), 0.2);
}

.filterPreview {
  width: 80px;
  height: 80px;
  border-radius: 8px;
  background-color: #444;
  overflow: hidden;
  position: relative;
}

.filterPreview::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-image: var(--preview-image);
  background-size: cover;
  background-position: center;
}

.filterPreview.chrome::before { filter: sepia(50%) saturate(150%); }
.filterPreview.fade::before { filter: opacity(80%) saturate(80%); }
.filterPreview.mono::before { filter: grayscale(100%); }
.filterPreview.noir::before { filter: grayscale(100%) contrast(150%); }
.filterPreview.process::before { filter: sepia(50%) hue-rotate(30deg); }
.filterPreview.tonal::before { filter: sepia(50%) contrast(150%); }
.filterPreview.transfer::before { filter: sepia(100%) hue-rotate(-50deg); }

.filterButton span {
  color: #fff;
  font-size: 12px;
  font-weight: 500;
}

.adjustValue {
  display: flex;
  align-items: center;
  gap: 4px;
  font-size: 12px;
  color: rgba(255, 255, 255, 0.6);
  margin-top: 4px;
}

.resetAdjustButton {
  background: none;
  border: none;
  padding: 2px;
  cursor: pointer;
  color: rgba(255, 255, 255, 0.4);
  display: flex;
  align-items: center;
  justify-content: center;
  transition: all 0.2s;
}

.resetAdjustButton:hover {
  color: var(--color-primary);
  transform: rotate(-45deg);
}

.adjustButton.active .adjustValue {
  color: var(--color-primary);
} 